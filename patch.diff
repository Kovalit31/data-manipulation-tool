diff --git a/customcmd-original/__main__.py b/customcmd-patch/__main__.py
index e1146cb..692ed86 100644
--- a/customcmd-original/__main__.py
+++ b/customcmd-patch/__main__.py
@@ -11,6 +11,7 @@ def main(args: list) -> None:
     loader.load_module(wrapper.commands.unix_like.echo, 'echo')
     loader.load_module(wrapper.commands.unix_like.cd, 'cd')
     loader.load_module(wrapper.commands.unix_like.pwd, 'pwd')
+    loader.load_module(wrapper.commands.dbcmd_mod.create_db, 'createdb')
     loader.load_module(wrapper.commands.unix_like.exit, 'exit', after=core.config.SYSEXIT)
     loader.load_module(wrapper.commands.bash_like.exec, 'exec', after=core.config.LOADFILE, unpack_output=True)
     loader.load_module(wrapper.commands.bash_like.read, 'read', after=core.config.EXPORTVAR, unpack_output=True)
diff --git a/customcmd-original/locale/lang/en.po b/customcmd-patch/locale/lang/en.po
index efa1fd7..1b12920 100644
--- a/customcmd-original/locale/lang/en.po
+++ b/customcmd-patch/locale/lang/en.po
@@ -40,3 +40,13 @@ error.locale.nolang
 No such language:
 locale.reload.trigger
 Locale reloaded!
+db.all.setid.action
+For creating new database, need to provide it ID. Please it write next:
+db.all.sign.maybe
+Databases can be signed
+db.all.sign.action
+Would you like to sign new db [y]es/[n]o?
+db.all.sign.text.action
+Please type the sign text above
+error.command.db.create.fewargs
+Few args for database create!
diff --git a/customcmd-original/locale/lang/ru.po b/customcmd-patch/locale/lang/ru.po
index 78bdaa4..e3919a7 100644
--- a/customcmd-original/locale/lang/ru.po
+++ b/customcmd-patch/locale/lang/ru.po
@@ -40,3 +40,13 @@ error.locale.nolang
 Нет такого языка:
 locale.reload.trigger
 Язык установлен!
+db.all.setid.action
+Для создания новой БД надо указать её ИД. Ввведите его:
+db.all.sign.maybe
+БД могут быть подписаны
+db.all.sign.action
+Хотите ли вы подписать новую БД [д]а/[н]ет?
+db.all.sign.text.action
+Напишите текст для подписи ниже
+error.command.db.create.fewargs
+Недостаточно аргументов для создания базы данных!
diff --git a/customcmd-original/locale/tokens.py b/customcmd-patch/locale/tokens.py
index ddf887a..65f67ad 100644
--- a/customcmd-original/locale/tokens.py
+++ b/customcmd-patch/locale/tokens.py
@@ -25,3 +25,8 @@ FEW_ARGS_ALL = "command.all.fewargs"
 FILE_WRITE_ERROR = "error.io.file.write"
 NO_SUCH_LOCALE = "error.locale.nolang"
 LOCALE_RELOADED = "locale.reload.trigger"
+NEED_FOR_DB_ID = "db.all.setid.action"
+IF_SIGN_DB = "db.all.sign.action"
+CAN_SIGN_DB = "db.all.sign.maybe"
+PLEASE_SET_SIGN_DATA = "db.all.sign.text.action"
+FEW_ARGS_FOR_CREATEDB = "error.command.db.create.fewargs"
diff --git a/customcmd-original/wrapper/commands/__init__.py b/customcmd-patch/wrapper/commands/__init__.py
index fd1b873..1ebf12f 100644
--- a/customcmd-original/wrapper/commands/__init__.py
+++ b/customcmd-patch/wrapper/commands/__init__.py
@@ -1,2 +1,3 @@
 from . import unix_like
 from . import bash_like
+from . import dbcmd_mod
diff --git a/customcmd-patch/wrapper/commands/dbcmd_mod.py b/customcmd-patch/wrapper/commands/dbcmd_mod.py
new file mode 100644
index 0000000..2591f03
--- /dev/null
+++ b/customcmd-patch/wrapper/commands/dbcmd_mod.py
@@ -0,0 +1,127 @@
+from ...tools import functions, pathutil
+from ...locale import locale, tokens
+from ...core import config
+
+import os
+
+def create_db(args: list):
+    '''
+    Create DB partitioning 
+    @param args[0] - File
+    @param args[1] - DB id
+    @param args[2] - (optional) DB sign
+    '''
+    if functions.return_if_few(args, 1, msg=tokens.FEW_ARGS_FOR_CREATEDB):
+        return
+    path = pathutil.get_full_path(args[0], return_else=True)
+    if os.path.exists(path):
+        if not functions.interactive(locale.get_by_token(tokens.NEED_REPLACE_FILE), locale.get_by_token(tokens.CONTINUE_QUESTION), _additional=args[0]):
+            return
+    db_id = args[1] if len(args) > 1 else input(f"{locale.get_by_token(tokens.NEED_FOR_DB_ID)} ")
+    db_sign_persist = False
+    db_sign_text = ""
+    db_sign_line_count = 0
+    if len(args) > 2:
+        db_sign_text = " ".join(args[2:]).replace("\\", "\n")
+        db_sign_line_count = len(db_sign_text.split("\n"))
+        db_sign_persist = not db_sign_persist
+    else:
+        if functions.interactive(locale.get_by_token(tokens.CAN_SIGN_DB), locale.get_by_token(tokens.IF_SIGN_DB)):
+            db_sign_persist = not db_sign_persist
+            functions.info(f"{locale.get_by_token(tokens.PLEASE_SET_SIGN_DATA)}")
+            while True:
+                db_sign_line_count += 1
+                db_sign_text = functions.add_or_set_str(db_sign_text, input().strip().replace("\\", "\n"))
+                if not db_sign_text.endswith("\n"):
+                    break
+    db_data = functions.add_to_string_with_nl(str(config.VERSION), config.DEFAULT_LANG)
+    db_data = functions.add_to_string_with_nl(db_data, db_id)
+    if db_sign_persist:
+        db_data = functions.add_to_string_with_nl(db_data, "s")
+        db_data = functions.add_to_string_with_nl(db_data, str(db_sign_line_count))
+        db_data = functions.add_to_string_with_nl(db_data, db_sign_text)
+    db_data = functions.add_to_string_with_nl(db_data, str(0))
+    db_data = functions.add_to_string_with_nl(db_data, ".")
+    db_data = functions.add_to_string_with_nl(db_data, str(0))
+
+def create_vdb():
+    pass
+
+def load_db():
+    pass
+
+def load_vdb():
+    pass
+
+def unload_db():
+    pass
+
+def unload_vdb():
+    pass
+
+def print_db():
+    pass
+
+def print_vdb():
+    pass
+
+def remove_vdb():
+    pass
+
+def remove_db():
+    pass
+
+# keys 
+
+# def add_key():
+#     pass
+
+# def remove_key():
+#     pass
+
+# def edit_key():
+#     pass
+
+# def print_key():
+#     pass
+
+def ls():
+    pass
+
+def rmkey():
+    pass
+
+def rmdir():
+    pass
+
+def cd():
+    pass
+
+def mkdir():
+    pass
+
+def addkey():
+    pass
+
+
+'''
+The comments
+
+version
+s/u - signed/unsigned
+if s, Sign len
+if s, sign
+db name
+vdb count
+<db structure without vdb>
+.
+num of files/dirs
+d/f (dir/file)
+__init__.py -|
+num of keys -| file
+d/f (dir/file)
+__pycache__       -| 
+num of files/dirs -| dirs
+dbend
+'''
+
